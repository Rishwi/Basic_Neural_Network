# -*- coding: utf-8 -*-
"""NeuralNetwork.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1neihrJrVTdOqKr89kX5Keft91owULlsr
"""

import numpy

class NeuralNetwork:
  def __init__(self,x,y):
    self.input = x
    self.w1 = np.random.rand(self.input.shape[1], 4)
    self.w2 = np.random.rand(4,1)
    self.y = y
    self.out = np.zeros(self.y.shape)
    
    
  def feedforward(self):
    self.l1 = sigmoid(np.dot(self.iput, self.w1))
    self.out = sigmoid(np.dot(self.l1, self.w2))
    
  def backprop(self):
    d_w2 = np.dot(self.layer.T, (2*(self.y - self.out)*sigmoid_derivative(self.out)))
    d_w1 = np.dot(self.input.T, (np.dot(2*(self.y - self.out)*sigmoid_derivative(self.out), self.w2.T)*sigmoid_derivative(self.l1)))
    
    self.w1 += d_w1
    self.w2 += d_w2